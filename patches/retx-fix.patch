Index: private/epxa10/hal/comm-hal.c
===================================================================
RCS file: /home/icecube/cvsroot/hal/private/epxa10/hal/comm-hal.c,v
retrieving revision 1.19
diff -u -r1.19 comm-hal.c
--- private/epxa10/hal/comm-hal.c	25 Nov 2004 00:50:38 -0000	1.19
+++ private/epxa10/hal/comm-hal.c	15 Jan 2005 03:14:22 -0000
@@ -869,16 +874,20 @@
 
 /* look through the retx list for packets that need to
  * be retransmitted...
+ *
+ * if we _ever_ start to retx, we must stop sending
+ * packets until the _entire_ retx queue is drained...
  */
 static int timeoutRetransmit(unsigned ticks) {
    /* retransmit all expired packets... */
    RetxElt *elt;
    const int tooOld = 100; /* 200ms */
    int found = 0;
-   
-   for (elt=retxTail; elt!=NULL; elt=elt->next) {
-      unsigned *pkt = elt->pkt;
-      const int dt = (int) ticks - (int) elt->ticks;
+
+   do {
+      for (elt=retxTail; elt!=NULL; elt=elt->next) {
+         unsigned *pkt = elt->pkt;
+         const int dt = (int) ticks - (int) elt->ticks;
 
 #if defined(DEBUGSERIAL) && 0
          {  char msg[80];
@@ -888,28 +897,33 @@
          }
 #endif
       
-      if (pkt!=NULL && dt > tooOld) {
-         const unsigned h = *pkt;
-   
-         found = 1;
+         if (pkt!=NULL && dt > tooOld) {
+            const unsigned h = *pkt;
 
 #if defined(DEBUGSERIAL)
-         {  char msg[80];
-            snprintf(msg, sizeof(msg),
-                     "retx: seqn: %hu", pktSeqn(h));
-            writeDebug(msg);
-         }
+            {  char msg[80];
+               snprintf(msg, sizeof(msg),
+                        "retx: seqn: %hu", pktSeqn(h));
+               writeDebug(msg);
+            }
 #endif
-         /* don't go on if there is no space in tx... */
-         if (!isHWPktSpace(h)) break;
-
-         /* mark the time again and resend... */
-         elt->ticks = getTicks();
-         hal_FPGA_hwsend(pkt);
-         domStatsPkt.nTxPkts++;
-         domStatsPkt.nTxResentPkts++;
+            /* don't go on if there is no space in tx... */
+            if (!isHWPktSpace(h)) break;
+            
+            /* mark the time again and resend... */
+            found = 1;
+            elt->ticks = getTicks();
+            hal_FPGA_hwsend(pkt);
+            domStatsPkt.nTxPkts++;
+            domStatsPkt.nTxResentPkts++;
+         }
       }
-   }
+      if (found) {
+         /* try to clear these guys out... */
+         scanPkts(1);
+         ticks = getTicks();
+      }
+   } while (found && retxTail!=NULL);
 
    return found;
 }
-
-
-
-
-
-
-
