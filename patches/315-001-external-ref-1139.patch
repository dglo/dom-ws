use the external 3.3V reference (Vdd)...

Index: private/epxa10/hal/hal.c
===================================================================
RCS file: /home/icecube/cvsroot/hal/private/epxa10/hal/hal.c,v
retrieving revision 1.65
diff -u -r1.65 hal.c
--- private/epxa10/hal/hal.c	29 Mar 2005 16:54:50 -0000	1.65
+++ private/epxa10/hal/hal.c	31 Mar 2005 22:21:45 -0000
@@ -12,6 +12,11 @@
 
 #include "dom-cpld/pld-version.h"
 
+/* use the 3.3V Vdd reference voltage for the max1139?
+ */
+#undef USE_VREF_3_3
+#define USE_VREF_3_3
+
 static void max5250Write(int chan, int val);
 static void max525Write(int chan, int val);
 static void max534Write(int chan, int val);
@@ -87,7 +92,27 @@
     */
    static int init = 0;
    if (!init) { max1139Read(channel/12, channel % 12); init = 1; }
+
+#if defined(USE_VREF_3_3)
+   /* we've moved the internal reference to Vdd (3.3V), two reprocussions:
+    *
+    * 1) we need to average a few samples together now to get a decent
+    *    reading.
+    * 2) we need to rescale the counts by new_counts=counts*2048/3300
+    */
+   {
+      unsigned sum = 0;
+      int i;
+      const int n = 8;
+      for (i=0; i<n; i++) {
+         sum += max1139Read(channel/12, channel % 12);
+      }
+   
+      return sum * 2048 / (3300 * n);
+   }
+#else
    return max1139Read(channel/12, channel % 12);
+#endif
 }
 
 static int daclookup[DOM_HAL_NUM_DAC_CHANNELS];
@@ -1117,7 +1147,13 @@
    /* set channel to readout... */
    startMax1139(cs);
    writeMax1139Byte(cs, 0x6a); /* 0110 1010 */
+
+#if defined(USE_VREF_3_3)
+   writeMax1139Byte(cs, 0x88); /* 1000 1000 -- */
+#else
    writeMax1139Byte(cs, 0xD8); /* 1101 1000 */
+#endif
+
    writeMax1139Byte(cs, (ch<<1) | 0x61); /* 0110 0000 */
    stopMax1139(cs);
 
