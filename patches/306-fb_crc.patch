Index: fb-hal.c
===================================================================
RCS file: /home/icecube/cvsroot/hal/private/epxa10/hal/fb-hal.c,v
retrieving revision 1.8.2.1
diff -u -r1.8.2.1 fb-hal.c
--- fb-hal.c	24 Nov 2004 19:47:10 -0000	1.8.2.1
+++ fb-hal.c	22 Dec 2004 19:47:34 -0000
@@ -190,13 +190,14 @@
 int hal_FB_get_serial(char **id) {
     int i;
     const char *hexdigit = "0123456789abcdef";
-    const int sz = 17;    
     static BOOLEAN read = FALSE;
     static unsigned char t[17];
+    unsigned char id_raw[8];
 
     /* Only read out ID on first call -- DISABLED FOR NOW */
     if (read == FALSE) {
-        memset(t, 0, sz);
+        memset(t, 0, 17);
+        memset(id_raw, 0, 8);
         *id = t;
 
         /* Check for presence bit reset */
@@ -218,25 +219,33 @@
             waitOneWireBusy();
         }
         
-        /* LSB comes out first, unlike HV id */
-        for (i=63; i>=0; i--) {
+        /* LSB comes out first */
+        for (i=0; i<64; i++) {
             FB(ONE_WIRE) = 0xb;
             waitOneWireBusy();
-            t[i/4]>>=1;
+            id_raw[i/8]>>=1;
             if (RFBBIT(ONE_WIRE, DATA)) {
-                t[i/4] |= 0x8;
+                id_raw[i/8] |= 0x80;
             }
         }
 
         /* Only copy over result if passes CRC check */
-        if (halCheckCRC(t, 16)) {
-            for (i=0; i<16; i++) t[i] = hexdigit[(int)t[i]];
+        /* halCheckCRC returns true on fail */
+        if (!halCheckCRC(id_raw, 8)) {
+            /* Translate binary char to ASCII hex digits */
+            for (i=7; i>=0; i--) {
+                t[2*(7-i)]   = hexdigit[(int)((id_raw[i]>>4) & 0xf)];
+                t[2*(7-i)+1] = hexdigit[(int)(id_raw[i] & 0xf)];
+            }
 
             /* DISABLE -- read out every time for now */
             /* read = TRUE; */
         }
-        else
+        else {
+            /* Bad CRC */
+            strcpy(t, "deadbeef");
             return FB_HAL_ERR_ID_BAD_CRC;
+        }
     }
     
     return 0;
