use 250KHz clock for scl on the max1139...

Index: private/epxa10/hal/hal.c
===================================================================
RCS file: /home/icecube/cvsroot/hal/private/epxa10/hal/hal.c,v
retrieving revision 1.65
diff -u -r1.65 hal.c
--- private/epxa10/hal/hal.c	29 Mar 2005 16:54:50 -0000	1.65
+++ private/epxa10/hal/hal.c	31 Mar 2005 22:21:45 -0000
@@ -984,6 +1009,11 @@
    return PLDBIT(SPI_CTRL, DAC_CL)|PLDBIT(SPI_CTRL, SERIAL_CLK); 
 }
 
+
+/* 1/2 period of the clock for 1139 chip 4us = 250KHz...
+ */
+#define TCLK1139  (4/2)
+
 /* i2c start condition...
  *
  * no assumptions about clock
@@ -994,15 +1024,15 @@
    /* both high... */
    PLD(SPI_CHIP_SELECT0) = adcCSHigh(cs);
    PLD(SPI_CTRL) = adcCLKHigh();
-   waitus(1);
+   waitus(TCLK1139);
    
    /* drop data... */
    PLD(SPI_CHIP_SELECT0) = adcCSLow(cs);
-   waitus(1);
+   waitus(TCLK1139);
 
    /* drop clock... */
    PLD(SPI_CTRL) = adcCLKLow();
-   waitus(1);
+   waitus(TCLK1139);
 }
 
 /* i2c stop condition...
@@ -1015,17 +1045,17 @@
    /* data goes low...
     */
    PLD(SPI_CHIP_SELECT0) = adcCSLow(cs);
-   waitus(1);
+   waitus(TCLK1139);
 
    /* now clock goes high...
     */
    PLD(SPI_CTRL) = adcCLKHigh();
-   waitus(1);
+   waitus(TCLK1139);
 
    /* now raise data to signal stop...
     */
    PLD(SPI_CHIP_SELECT0) = adcCSHigh(cs);
-   waitus(1);
+   waitus(TCLK1139);
 }
 
 /* i2c routines...
@@ -1047,19 +1077,19 @@
        */
       PLD(SPI_CHIP_SELECT0) = bit;
       PLD(SPI_CTRL) = adcCLKHigh();
-      waitus(1);
+      waitus(TCLK1139);
 
       /* drop the clock and wait...
        */
       PLD(SPI_CTRL) = adcCLKLow();
-      waitus(1);
+      waitus(TCLK1139);
    }
 
    /* get ack, drop clock, wait, raise clock, wait, sample...
     */
    PLD(SPI_CHIP_SELECT0) = adcCSHigh(cs);
    PLD(SPI_CTRL) = adcCLKHigh();
-   waitus(1);
+   waitus(TCLK1139);
    
    ack = PLD(SPI_CHIP_SELECT0) & (1<<(cs+5));
 
@@ -1069,7 +1099,7 @@
     */
 
    PLD(SPI_CTRL) = adcCLKLow();
-   waitus(1);
+   waitus(TCLK1139);
 }
 
 /* assume clock is low on entry
@@ -1087,14 +1117,14 @@
    for (i=0; i<8; i++) {
       /* raise clock... */
       PLD(SPI_CTRL) = adcCLKHigh();
-      waitus(1);
+      waitus(TCLK1139);
       
       /* read data... */
       val = (val<<1) | ( (PLD(SPI_CHIP_SELECT0) & (1<<(cs+5))) ? 1 : 0 );
 
       /* drop clock... */
       PLD(SPI_CTRL) = adcCLKLow();
-      waitus(1);
+      waitus(TCLK1139);
    }
    
    /* send nack...
@@ -1103,10 +1133,10 @@
    else PLD(SPI_CHIP_SELECT0) = adcCSLow(cs);
 
    PLD(SPI_CTRL) = adcCLKHigh();
-   waitus(1);
+   waitus(TCLK1139);
 
    PLD(SPI_CTRL) = adcCLKLow();
-   waitus(1);
+   waitus(TCLK1139);
 
    return val;
 }
 
