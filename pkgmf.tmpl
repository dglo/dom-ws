#
# makefile for building a package,
#
PACKAGE=icecube.testdaq.control

#
# set the package path from the package name...
#
PACKAGE_PATH=$(shell echo $(PACKAGE) | tr '.' '/')

#
# project can be figured out from the directory name...
#
PROJECT=$(shell pwd | tr '/' ' ' | awk '{ print $$(NF-1);}')

#
# jdeps.jar can be found from: google JavaDeps
#
JDEPSJAR=~/build/JavaDeps-1.0.4/jdeps.jar

#
# setup how to run java dep command
#
JAVADEP=java -classpath $(JDEPSJAR) smr.JavaDeps.JavaDeps
DEPFLAGS=-d ../../build/$(PROJECT) -b "./appendsrc.sh $(PACKAGE).cf"

#
# set classpath here -- this is a HACK!!!
#
# in the end it should be figured out from package
# dependencies.  since those dependencies are created
# from the jar file, they may not be available, so,
# to bootstrap, we may need this...
#
CPTOOLS=$(shell cd ../../dom-ws; ./getjars.sh $(PACKAGE) | \
		grep '^../tools/lib' | \
		sort | uniq | awk '{ print "../" $$1; }' )

CPLIB=$(shell cd ../../build/; lessecho * | tr ' ' '\n' | awk '{ print "../../build/" $$1; }')

#CPLIB=$(shell cd ../../dom-ws; ./getjars.sh $(PACKAGE) | grep '^../lib' | \
#		sort | uniq | awk '{ print "../" $$1; }' )
CPEXTRA=../../tools/lib/jaxb-impl.jar:../../tools/lib/namespace.jar:../../tools/lib/xsdlib.jar
CP=.:$(shell echo $(CPTOOLS) $(CPLIB) | tr ' ' ':' | sed 's/:$$//1'):$(CPEXTRA)

JAVACOMPILE=javac -classpath ${CP} -d ../../build/$(PROJECT)

default: all
include $(PACKAGE).deps
all: classes

$(PACKAGE).deps:
	$(JAVADEP) $(DEPFLAGS) $(PACKAGE_PATH)/*.java > $(PACKAGE).deps

dep:
	$(JAVADEP) $(DEPFLAGS) $(PACKAGE_PATH)/*.java > $(PACKAGE).deps

classes: clrcf nlines.sh appendsrc.sh $(CLASSES) uniq.cf
	@if [[ ! -d ../../build/$(PROJECT) ]]; then \
		mkdir -p ../../build/$(PROJECT); fi
	@if (( `./nlines.sh $(PACKAGE).cf` > 0 )); then \
		$(JAVACOMPILE) @$(PACKAGE).cf; fi

clrcf:
	@rm -f $(PACKAGE).cf
	@touch $(PACKAGE).cf

uniq.cf:
	@uniq < $(PACKAGE).cf > uniq.cf
	@mv uniq.cf $(PACKAGE).cf

clean:
	rm -f $(CLASSES)
	rm -f $(PACKAGE).cf
	rm -f $(PACKAGE).deps
	rm -f nlines.sh appendsrc.sh
	
nlines.sh:
	echo '#!/bin/sh' > nlines.sh
	printf "exec wc -l %c1 | awk '{ print %c1;}'" $$ $$ >> nlines.sh
	chmod +x nlines.sh

appendsrc.sh:
	echo '#!/bin/sh' > appendsrc.sh
	echo 'file=$$1' >> appendsrc.sh
	echo 'shift' >> appendsrc.sh
	echo 'while (( $$# > 0 )); do' >> appendsrc.sh
	echo '  if ! egrep "^$$1$$" $${file}; then ' >> appendsrc.sh
	echo '    echo $$1 >> $$file' >> appendsrc.sh
	echo '  fi' >> appendsrc.sh
	echo '  shift' >> appendsrc.sh
	echo 'done' >> appendsrc.sh
	chmod +x appendsrc.sh

	




